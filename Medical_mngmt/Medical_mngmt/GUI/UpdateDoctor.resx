<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        BUMFxX2cyBoAAAAASUVORK5CYII=
</value>
  </data>
</root>